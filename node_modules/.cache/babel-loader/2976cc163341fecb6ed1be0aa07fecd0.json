{"ast":null,"code":"import React, { createContext, useReducer, useEffect, useMemo, useContext, useDebugValue } from 'react';\nimport { useStorageReducer } from 'react-storage-hooks';\nimport crypto from 'crypto';\n\nfunction _optionalChain(ops) {\n  let lastAccessLHS = undefined;\n  let value = ops[0];\n  let i = 1;\n\n  while (i < ops.length) {\n    const op = ops[i];\n    const fn = ops[i + 1];\n    i += 2;\n\n    if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) {\n      return undefined;\n    }\n\n    if (op === 'access' || op === 'optionalAccess') {\n      lastAccessLHS = value;\n      value = fn(value);\n    } else if (op === 'call' || op === 'optionalCall') {\n      value = fn((...args) => value.call(lastAccessLHS, ...args));\n      lastAccessLHS = undefined;\n    }\n  }\n\n  return value;\n}\n\nconst isClient = typeof window === 'object';\n\nconst formatCurrencyString = ({\n  value,\n  currency,\n  language = isClient ? navigator.language : 'en-US'\n}) => {\n  value = parseInt(value);\n  const numberFormat = new Intl.NumberFormat(language, {\n    style: 'currency',\n    currency,\n    currencyDisplay: 'symbol'\n  });\n  const parts = numberFormat.formatToParts(value);\n  let zeroDecimalCurrency = true;\n\n  for (const part of parts) {\n    if (part.type === 'decimal') {\n      zeroDecimalCurrency = false;\n      break;\n    }\n  }\n\n  value = zeroDecimalCurrency ? value : value / 100;\n  return numberFormat.format(value.toFixed(2));\n};\n\nfunction useLocalStorageReducer(key, reducer, initialState) {\n  const dummyStorage = {\n    getItem() {\n      return null;\n    },\n\n    setItem() {},\n\n    removeItem() {}\n\n  };\n  return useStorageReducer(isClient ? window.localStorage : dummyStorage, key, reducer, initialState);\n}\n\nconst getCheckoutData = {\n  stripe(cart) {\n    const lineItems = [];\n\n    for (const sku in cart.cartDetails) lineItems.push({\n      price: sku,\n      quantity: cart.cartDetails[sku].quantity\n    });\n\n    const options = {\n      mode: 'payment',\n      lineItems,\n      successUrl: cart.successUrl,\n      cancelUrl: cart.cancelUrl,\n      billingAddressCollection: cart.billingAddressCollection ? 'required' : 'auto',\n      submitType: 'auto'\n    };\n\n    if (_optionalChain([cart, 'access', _ => _.allowedCountries, 'optionalAccess', _2 => _2.length])) {\n      options.shippingAddressCollection = {\n        allowedCountries: cart.allowedCountries\n      };\n    }\n\n    return options;\n  }\n\n};\n\nfunction checkoutHandler(cart, checkoutOptions) {\n  let serviceProperty = '';\n  if (cart.stripe) serviceProperty = 'stripe';\n  const needsCheckoutData = cart.mode === 'client-only';\n  return async function (parameters) {\n    if (!serviceProperty) {\n      throw new Error('No compatible API has been defined, your options are: Stripe');\n    }\n\n    if (!checkoutOptions.modes.includes(cart.mode)) {\n      throw new Error(`Invalid checkout mode '${cart.mode}' was chosen. The valid modes are ${new Intl.ListFormat().format(checkoutOptions.modes)}.`);\n    }\n\n    let options = {\n      sessionId: _optionalChain([parameters, 'optionalAccess', _3 => _3.sessionId])\n    };\n    if (needsCheckoutData) options = getCheckoutData.stripe(cart);\n    const {\n      error\n    } = await checkoutOptions[serviceProperty](await cart[serviceProperty], options, parameters);\n    if (error) return error;\n  };\n}\n\nconst rnds8Pool = new Uint8Array(256); // # of random values to pre-allocate\n\nlet poolPtr = rnds8Pool.length;\n\nfunction rng() {\n  if (poolPtr > rnds8Pool.length - 16) {\n    crypto.randomFillSync(rnds8Pool);\n    poolPtr = 0;\n  }\n\n  return rnds8Pool.slice(poolPtr, poolPtr += 16);\n}\n\nvar REGEX = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  const uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nconst cartInitialState = {\n  lastClicked: '',\n  shouldDisplayCart: false,\n  stripe: null\n};\n\nfunction cartReducer(cart, action) {\n  switch (action.type) {\n    case 'store-last-clicked':\n      return { ...cart,\n        lastClicked: action.id\n      };\n\n    case 'cart-click':\n      return { ...cart,\n        shouldDisplayCart: !cart.shouldDisplayCart\n      };\n\n    case 'cart-hover':\n      return { ...cart,\n        shouldDisplayCart: true\n      };\n\n    case 'close-cart':\n      return { ...cart,\n        shouldDisplayCart: false\n      };\n\n    case 'stripe-changed':\n      return { ...cart,\n        stripe: action.stripe\n      };\n\n    default:\n      return cart;\n  }\n}\n\nconst cartValuesInitialState = {\n  cartDetails: {},\n  totalPrice: 0,\n  cartCount: 0\n};\n\nfunction Entry(product, quantity, currency, language, price_metadata, product_metadata) {\n  const id = product.id || product.price_id || product.sku_id || product.sku || v4();\n\n  if (!product.price_data && price_metadata) {\n    product.price_data = { ...price_metadata\n    };\n  } else if (product.price_data && price_metadata) {\n    product.price_data = { ...product.price_data,\n      ...price_metadata\n    };\n  }\n\n  if (!product.product_data && product_metadata) {\n    product.product_data = { ...product_metadata\n    };\n  } else if (product.product_data && product_metadata) {\n    product.product_data = { ...product.product_data,\n      ...product_metadata\n    };\n  }\n\n  return { ...product,\n    id,\n    quantity,\n\n    get value() {\n      return this.price * this.quantity;\n    },\n\n    get formattedValue() {\n      return formatCurrencyString({\n        value: this.value,\n        currency,\n        language\n      });\n    }\n\n  };\n}\n\nfunction cartValuesReducer(state, action) {\n  function createEntry(product, count, price_metadata, product_metadata) {\n    const entry = Entry(product, count, action.currency, action.language, price_metadata, product_metadata);\n    return {\n      cartDetails: { ...state.cartDetails,\n        [entry.id]: entry\n      },\n      totalPrice: state.totalPrice + product.price * count,\n      cartCount: state.cartCount + count\n    };\n  }\n\n  function updateEntry(sku, count, price_metadata, product_metadata) {\n    const cartDetails = { ...state.cartDetails\n    };\n    const entry = cartDetails[sku];\n    if (entry.quantity + count <= 0) return removeEntry(sku);\n\n    if (!entry.price_data && price_metadata) {\n      entry.price_data = { ...price_metadata\n      };\n    } else if (entry.price_data && price_metadata) {\n      entry.price_data = { ...entry.price_data,\n        ...price_metadata\n      };\n    }\n\n    if (!entry.product_data && product_metadata) {\n      entry.product_data = { ...product_metadata\n      };\n    } else if (entry.product_data && product_metadata) {\n      entry.product_data = { ...entry.product_data,\n        ...product_metadata\n      };\n    }\n\n    cartDetails[sku] = Entry(entry, entry.quantity + count, action.currency, action.language, price_metadata, product_metadata);\n    return {\n      cartDetails,\n      totalPrice: state.totalPrice + entry.price * count,\n      cartCount: state.cartCount + count\n    };\n  }\n\n  function removeEntry(sku) {\n    const cartDetails = { ...state.cartDetails\n    };\n    const totalPrice = state.totalPrice - cartDetails[sku].value;\n    const cartCount = state.cartCount - cartDetails[sku].quantity;\n    delete cartDetails[sku];\n    return {\n      cartDetails,\n      totalPrice,\n      cartCount\n    };\n  }\n\n  function updateQuantity(sku, quantity) {\n    const entry = state.cartDetails[sku];\n    return updateEntry(sku, quantity - entry.quantity);\n  }\n\n  switch (action.type) {\n    case 'add-item-to-cart':\n      if (action.count <= 0) break;\n      if (action.product.id in state.cartDetails) return updateEntry(action.product.id, action.count, action.price_metadata, action.product_metadata);\n      return createEntry(action.product, action.count, action.price_metadata, action.product_metadata);\n\n    case 'increment-item':\n      if (action.count <= 0) break;\n      if (action.id in state.cartDetails) return updateEntry(action.id, action.count);\n      break;\n\n    case 'decrement-item':\n      if (action.count <= 0) break;\n      if (action.id in state.cartDetails) return updateEntry(action.id, -action.count);\n      break;\n\n    case 'set-item-quantity':\n      if (action.count < 0) break;\n      if (action.id in state.cartDetails) return updateQuantity(action.id, action.quantity);\n      break;\n\n    case 'remove-item-from-cart':\n      if (action.id in state.cartDetails) return removeEntry(action.id);\n      break;\n\n    case 'clear-cart':\n      return cartValuesInitialState;\n\n    case 'load-cart':\n      if (!action.shouldMerge) state = { ...cartValuesInitialState\n      };\n\n      for (const sku in action.cartDetails) {\n        const entry = action.cartDetails[sku];\n        if (action.filter && !action.filter(entry)) continue;\n        state = createEntry(entry, entry.quantity);\n      }\n\n      return state;\n\n    default:\n      return state;\n  }\n\n  console.warn('Invalid action arguments', action);\n  return state;\n}\n\nconst _jsxFileName = \"/Users/nickdejesus/Code/hooks/use-shopping-cart/use-shopping-cart/src/index.js\";\nconst CartContext = createContext([{\n  lastClicked: '',\n  shouldDisplayCart: false,\n  ...cartValuesInitialState\n}, () => {}]);\n\nfunction CartProvider({\n  children,\n  mode,\n  stripe,\n  successUrl,\n  cancelUrl,\n  currency,\n  language = isClient ? navigator.language : 'en-US',\n  billingAddressCollection = false,\n  allowedCountries = null\n}) {\n  const [cart, cartDispatch] = useReducer(cartReducer, cartInitialState);\n  useEffect(() => {\n    cartDispatch({\n      type: 'stripe-changed',\n      stripe\n    });\n  }, [stripe]);\n  const [cartValues, cartValuesDispatch] = useLocalStorageReducer('cart-values', cartValuesReducer, cartValuesInitialState); // combine dispatches and\n  // memoize context value to avoid causing re-renders\n\n  const contextValue = useMemo(() => [{ ...cart,\n    ...cartValues,\n    mode,\n    successUrl,\n    cancelUrl,\n    currency,\n    language,\n    billingAddressCollection,\n    allowedCountries\n  }, action => {\n    cartDispatch(action);\n    cartValuesDispatch({ ...action,\n      currency,\n      language\n    });\n  }], [cart, cartDispatch, cartValues, cartValuesDispatch, mode, successUrl, cancelUrl, currency, language, billingAddressCollection, allowedCountries]);\n  return React.createElement(CartContext.Provider, {\n    value: contextValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    }\n  }, children);\n}\n\nconst useShoppingCart = () => {\n  const [cart, dispatch] = useContext(CartContext);\n  const {\n    lastClicked,\n    shouldDisplayCart,\n    cartCount,\n    cartDetails,\n    totalPrice,\n    currency,\n    language\n  } = cart;\n\n  const addItem = (product, count = 1, price_metadata, product_metadata) => {\n    dispatch({\n      type: 'add-item-to-cart',\n      product,\n      count,\n      price_metadata,\n      product_metadata\n    });\n  };\n\n  const removeItem = id => dispatch({\n    type: 'remove-item-from-cart',\n    id\n  });\n\n  const setItemQuantity = (id, quantity) => dispatch({\n    type: 'set-item-quantity',\n    id,\n    quantity\n  });\n\n  const incrementItem = (id, count = 1) => dispatch({\n    type: 'increment-item',\n    id,\n    count\n  });\n\n  const decrementItem = (id, count = 1) => dispatch({\n    type: 'decrement-item',\n    id,\n    count\n  });\n\n  const clearCart = () => dispatch({\n    type: 'clear-cart'\n  });\n\n  const storeLastClicked = id => dispatch({\n    type: 'store-last-clicked',\n    id\n  });\n\n  const handleCartClick = () => dispatch({\n    type: 'cart-click'\n  });\n\n  const handleCartHover = () => dispatch({\n    type: 'cart-hover'\n  });\n\n  const handleCloseCart = () => dispatch({\n    type: 'close-cart'\n  });\n\n  const loadCart = (cartDetails, shouldMerge = true) => dispatch({\n    type: 'load-cart',\n    cartDetails,\n    shouldMerge\n  });\n\n  const redirectToCheckout = checkoutHandler(cart, {\n    modes: ['client-only', 'checkout-session'],\n\n    stripe(stripe, options) {\n      return stripe.redirectToCheckout(options);\n    }\n\n  });\n  const checkoutSingleItem = checkoutHandler(cart, {\n    modes: ['client-only'],\n\n    stripe(stripe, options, {\n      sku,\n      quantity = 1\n    }) {\n      options.lineItems = [{\n        price: sku,\n        quantity\n      }];\n      return stripe.redirectToCheckout(options);\n    }\n\n  });\n  const shoppingCart = {\n    cartDetails,\n    cartCount,\n    totalPrice,\n\n    get formattedTotalPrice() {\n      return formatCurrencyString({\n        value: totalPrice,\n        currency,\n        language\n      });\n    },\n\n    addItem,\n    removeItem,\n    setItemQuantity,\n    incrementItem,\n    decrementItem,\n    clearCart,\n    lastClicked,\n    storeLastClicked,\n    shouldDisplayCart,\n    handleCartClick,\n    handleCartHover,\n    handleCloseCart,\n    redirectToCheckout,\n    checkoutSingleItem,\n    loadCart\n  };\n  useDebugValue(shoppingCart);\n  return shoppingCart;\n};\n\nfunction DebugCart(props) {\n  const cart = useShoppingCart();\n  const cartPropertyRows = Object.entries(cart).filter(([, value]) => typeof value !== 'function').map(([key, value]) => React.createElement('tr', {\n    key: key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    }\n  }, React.createElement('td', {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    }\n  }, key), React.createElement('td', {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    }\n  }, typeof value === 'object' ? React.createElement('button', {\n    onClick: () => console.log(value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    }\n  }, \"Log value\") : JSON.stringify(value))));\n  return React.createElement('table', {\n    style: {\n      position: 'fixed',\n      top: 50,\n      right: 50,\n      backgroundColor: '#eee',\n      textAlign: 'left',\n      maxWidth: 500,\n      padding: 20,\n      borderSpacing: '25px 5px'\n    },\n    ...props,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    }\n  }, React.createElement('thead', {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    }\n  }, React.createElement('tr', {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    }\n  }, React.createElement('th', {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    }\n  }, \"Key\"), React.createElement('th', {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    }\n  }, \"Value\"))), React.createElement('tbody', {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    }\n  }, cartPropertyRows));\n}\n\nexport { CartContext, CartProvider, DebugCart, formatCurrencyString, isClient, useShoppingCart };","map":{"version":3,"sources":["../src/util.js","../node_modules/uuid/dist/esm-node/rng.js","../node_modules/uuid/dist/esm-node/regex.js","../node_modules/uuid/dist/esm-node/validate.js","../node_modules/uuid/dist/esm-node/stringify.js","../node_modules/uuid/dist/esm-node/v4.js","../src/reducers.js","../src/index.js"],"names":[],"mappings":"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","sourcesContent":["import { useStorageReducer } from 'react-storage-hooks'\r\n\r\nexport const isClient = typeof window === 'object'\r\n\r\nexport const formatCurrencyString = ({\r\n  value,\r\n  currency,\r\n  language = isClient ? navigator.language : 'en-US'\r\n}) => {\r\n  value = parseInt(value)\r\n  const numberFormat = new Intl.NumberFormat(language, {\r\n    style: 'currency',\r\n    currency,\r\n    currencyDisplay: 'symbol'\r\n  })\r\n  const parts = numberFormat.formatToParts(value)\r\n  let zeroDecimalCurrency = true\r\n\r\n  for (const part of parts) {\r\n    if (part.type === 'decimal') {\r\n      zeroDecimalCurrency = false\r\n      break\r\n    }\r\n  }\r\n\r\n  value = zeroDecimalCurrency ? value : value / 100\r\n  return numberFormat.format(value.toFixed(2))\r\n}\r\n\r\nexport function useLocalStorageReducer(key, reducer, initialState) {\r\n  const dummyStorage = {\r\n    getItem() {\r\n      return null\r\n    },\r\n    setItem() {},\r\n    removeItem() {}\r\n  }\r\n  return useStorageReducer(\r\n    isClient ? window.localStorage : dummyStorage,\r\n    key,\r\n    reducer,\r\n    initialState\r\n  )\r\n}\r\n\r\nexport const getCheckoutData = {\r\n  stripe(cart) {\r\n    const lineItems = []\r\n    for (const sku in cart.cartDetails)\r\n      lineItems.push({ price: sku, quantity: cart.cartDetails[sku].quantity })\r\n\r\n    const options = {\r\n      mode: 'payment',\r\n      lineItems,\r\n      successUrl: cart.successUrl,\r\n      cancelUrl: cart.cancelUrl,\r\n      billingAddressCollection: cart.billingAddressCollection\r\n        ? 'required'\r\n        : 'auto',\r\n      submitType: 'auto'\r\n    }\r\n\r\n    if (cart.allowedCountries?.length) {\r\n      options.shippingAddressCollection = {\r\n        allowedCountries: cart.allowedCountries\r\n      }\r\n    }\r\n\r\n    return options\r\n  }\r\n}\r\n\r\nexport function checkoutHandler(cart, checkoutOptions) {\r\n  let serviceProperty = ''\r\n  if (cart.stripe) serviceProperty = 'stripe'\r\n\r\n  const needsCheckoutData = cart.mode === 'client-only'\r\n\r\n  return async function (parameters) {\r\n    if (!serviceProperty) {\r\n      throw new Error(\r\n        'No compatible API has been defined, your options are: Stripe'\r\n      )\r\n    }\r\n\r\n    if (!checkoutOptions.modes.includes(cart.mode)) {\r\n      throw new Error(\r\n        `Invalid checkout mode '${\r\n          cart.mode\r\n        }' was chosen. The valid modes are ${new Intl.ListFormat().format(\r\n          checkoutOptions.modes\r\n        )}.`\r\n      )\r\n    }\r\n\r\n    let options = { sessionId: parameters?.sessionId }\r\n    if (needsCheckoutData) options = getCheckoutData.stripe(cart)\r\n\r\n    const { error } = await checkoutOptions[serviceProperty](\r\n      await cart[serviceProperty],\r\n      options,\r\n      parameters\r\n    )\r\n    if (error) return error\r\n  }\r\n}\r\n\r\nexport async function filterCart(cartDetails, filter) {\r\n  const filteredCart = {}\r\n\r\n  for (const sku in cartDetails) {\r\n    const entry = cartDetails[sku]\r\n    if (await filter(entry)) filteredCart[sku] = entry\r\n  }\r\n\r\n  return filteredCart\r\n}\r\n","import crypto from 'crypto';\nconst rnds8Pool = new Uint8Array(256); // # of random values to pre-allocate\n\nlet poolPtr = rnds8Pool.length;\nexport default function rng() {\n  if (poolPtr > rnds8Pool.length - 16) {\n    crypto.randomFillSync(rnds8Pool);\n    poolPtr = 0;\n  }\n\n  return rnds8Pool.slice(poolPtr, poolPtr += 16);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  const uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import { formatCurrencyString } from './util'\r\nimport { v4 as uuidv4 } from 'uuid'\r\n\r\nexport const cartInitialState = {\r\n  lastClicked: '',\r\n  shouldDisplayCart: false,\r\n  stripe: null\r\n}\r\nexport function cartReducer(cart, action) {\r\n  switch (action.type) {\r\n    case 'store-last-clicked':\r\n      return {\r\n        ...cart,\r\n        lastClicked: action.id\r\n      }\r\n\r\n    case 'cart-click':\r\n      return {\r\n        ...cart,\r\n        shouldDisplayCart: !cart.shouldDisplayCart\r\n      }\r\n\r\n    case 'cart-hover':\r\n      return {\r\n        ...cart,\r\n        shouldDisplayCart: true\r\n      }\r\n\r\n    case 'close-cart':\r\n      return {\r\n        ...cart,\r\n        shouldDisplayCart: false\r\n      }\r\n\r\n    case 'stripe-changed':\r\n      return {\r\n        ...cart,\r\n        stripe: action.stripe\r\n      }\r\n\r\n    default:\r\n      return cart\r\n  }\r\n}\r\n\r\nexport const cartValuesInitialState = {\r\n  cartDetails: {},\r\n  totalPrice: 0,\r\n  cartCount: 0\r\n}\r\n\r\nfunction Entry(\r\n  product,\r\n  quantity,\r\n  currency,\r\n  language,\r\n  price_metadata,\r\n  product_metadata\r\n) {\r\n  const id =\r\n    product.id || product.price_id || product.sku_id || product.sku || uuidv4()\r\n\r\n  if (!product.price_data && price_metadata) {\r\n    product.price_data = {\r\n      ...price_metadata\r\n    }\r\n  } else if (product.price_data && price_metadata) {\r\n    product.price_data = {\r\n      ...product.price_data,\r\n      ...price_metadata\r\n    }\r\n  }\r\n\r\n  if (!product.product_data && product_metadata) {\r\n    product.product_data = {\r\n      ...product_metadata\r\n    }\r\n  } else if (product.product_data && product_metadata) {\r\n    product.product_data = {\r\n      ...product.product_data,\r\n      ...product_metadata\r\n    }\r\n  }\r\n\r\n  return {\r\n    ...product,\r\n    id,\r\n    quantity,\r\n    get value() {\r\n      return this.price * this.quantity\r\n    },\r\n    get formattedValue() {\r\n      return formatCurrencyString({\r\n        value: this.value,\r\n        currency,\r\n        language\r\n      })\r\n    }\r\n  }\r\n}\r\nexport function cartValuesReducer(state, action) {\r\n  function createEntry(product, count, price_metadata, product_metadata) {\r\n    const entry = Entry(\r\n      product,\r\n      count,\r\n      action.currency,\r\n      action.language,\r\n      price_metadata,\r\n      product_metadata\r\n    )\r\n\r\n    return {\r\n      cartDetails: {\r\n        ...state.cartDetails,\r\n        [entry.id]: entry\r\n      },\r\n      totalPrice: state.totalPrice + product.price * count,\r\n      cartCount: state.cartCount + count\r\n    }\r\n  }\r\n\r\n  function updateEntry(sku, count, price_metadata, product_metadata) {\r\n    const cartDetails = { ...state.cartDetails }\r\n    const entry = cartDetails[sku]\r\n    if (entry.quantity + count <= 0) return removeEntry(sku)\r\n\r\n    if (!entry.price_data && price_metadata) {\r\n      entry.price_data = {\r\n        ...price_metadata\r\n      }\r\n    } else if (entry.price_data && price_metadata) {\r\n      entry.price_data = {\r\n        ...entry.price_data,\r\n        ...price_metadata\r\n      }\r\n    }\r\n\r\n    if (!entry.product_data && product_metadata) {\r\n      entry.product_data = {\r\n        ...product_metadata\r\n      }\r\n    } else if (entry.product_data && product_metadata) {\r\n      entry.product_data = {\r\n        ...entry.product_data,\r\n        ...product_metadata\r\n      }\r\n    }\r\n\r\n    cartDetails[sku] = Entry(\r\n      entry,\r\n      entry.quantity + count,\r\n      action.currency,\r\n      action.language,\r\n      price_metadata,\r\n      product_metadata\r\n    )\r\n\r\n    return {\r\n      cartDetails,\r\n      totalPrice: state.totalPrice + entry.price * count,\r\n      cartCount: state.cartCount + count\r\n    }\r\n  }\r\n\r\n  function removeEntry(sku) {\r\n    const cartDetails = { ...state.cartDetails }\r\n    const totalPrice = state.totalPrice - cartDetails[sku].value\r\n    const cartCount = state.cartCount - cartDetails[sku].quantity\r\n    delete cartDetails[sku]\r\n\r\n    return { cartDetails, totalPrice, cartCount }\r\n  }\r\n\r\n  function updateQuantity(sku, quantity) {\r\n    const entry = state.cartDetails[sku]\r\n    return updateEntry(sku, quantity - entry.quantity)\r\n  }\r\n\r\n  switch (action.type) {\r\n    case 'add-item-to-cart':\r\n      if (action.count <= 0) break\r\n      if (action.product.id in state.cartDetails)\r\n        return updateEntry(\r\n          action.product.id,\r\n          action.count,\r\n          action.price_metadata,\r\n          action.product_metadata\r\n        )\r\n      return createEntry(\r\n        action.product,\r\n        action.count,\r\n        action.price_metadata,\r\n        action.product_metadata\r\n      )\r\n\r\n    case 'increment-item':\r\n      if (action.count <= 0) break\r\n      if (action.id in state.cartDetails)\r\n        return updateEntry(action.id, action.count)\r\n      break\r\n\r\n    case 'decrement-item':\r\n      if (action.count <= 0) break\r\n      if (action.id in state.cartDetails)\r\n        return updateEntry(action.id, -action.count)\r\n      break\r\n\r\n    case 'set-item-quantity':\r\n      if (action.count < 0) break\r\n      if (action.id in state.cartDetails)\r\n        return updateQuantity(action.id, action.quantity)\r\n      break\r\n\r\n    case 'remove-item-from-cart':\r\n      if (action.id in state.cartDetails) return removeEntry(action.id)\r\n      break\r\n\r\n    case 'clear-cart':\r\n      return cartValuesInitialState\r\n\r\n    case 'load-cart':\r\n      if (!action.shouldMerge) state = { ...cartValuesInitialState }\r\n\r\n      for (const sku in action.cartDetails) {\r\n        const entry = action.cartDetails[sku]\r\n        if (action.filter && !action.filter(entry)) continue\r\n\r\n        state = createEntry(entry, entry.quantity)\r\n      }\r\n      return state\r\n\r\n    default:\r\n      return state\r\n  }\r\n\r\n  console.warn('Invalid action arguments', action)\r\n  return state\r\n}\r\n","import React, {\r\n  createContext,\r\n  useContext,\r\n  useDebugValue,\r\n  useEffect,\r\n  useMemo,\r\n  useReducer\r\n} from 'react'\r\n\r\nimport {\r\n  checkoutHandler,\r\n  formatCurrencyString,\r\n  isClient,\r\n  useLocalStorageReducer\r\n} from './util'\r\nimport {\r\n  cartInitialState,\r\n  cartReducer,\r\n  cartValuesInitialState,\r\n  cartValuesReducer\r\n} from './reducers'\r\n\r\nexport { formatCurrencyString, isClient } from './util'\r\n\r\nexport const CartContext = createContext([\r\n  {\r\n    lastClicked: '',\r\n    shouldDisplayCart: false,\r\n    ...cartValuesInitialState\r\n  },\r\n  () => {}\r\n])\r\n\r\nexport function CartProvider({\r\n  children,\r\n  mode,\r\n  stripe,\r\n  successUrl,\r\n  cancelUrl,\r\n  currency,\r\n  language = isClient ? navigator.language : 'en-US',\r\n  billingAddressCollection = false,\r\n  allowedCountries = null\r\n}) {\r\n  const [cart, cartDispatch] = useReducer(cartReducer, cartInitialState)\r\n\r\n  useEffect(() => {\r\n    cartDispatch({ type: 'stripe-changed', stripe })\r\n  }, [stripe])\r\n\r\n  const [cartValues, cartValuesDispatch] = useLocalStorageReducer(\r\n    'cart-values',\r\n    cartValuesReducer,\r\n    cartValuesInitialState\r\n  )\r\n\r\n  // combine dispatches and\r\n  // memoize context value to avoid causing re-renders\r\n  const contextValue = useMemo(\r\n    () => [\r\n      {\r\n        ...cart,\r\n        ...cartValues,\r\n        mode,\r\n        successUrl,\r\n        cancelUrl,\r\n        currency,\r\n        language,\r\n        billingAddressCollection,\r\n        allowedCountries\r\n      },\r\n      (action) => {\r\n        cartDispatch(action)\r\n        cartValuesDispatch({ ...action, currency, language })\r\n      }\r\n    ],\r\n    [\r\n      cart,\r\n      cartDispatch,\r\n      cartValues,\r\n      cartValuesDispatch,\r\n      mode,\r\n      successUrl,\r\n      cancelUrl,\r\n      currency,\r\n      language,\r\n      billingAddressCollection,\r\n      allowedCountries\r\n    ]\r\n  )\r\n\r\n  return (\r\n    <CartContext.Provider value={contextValue}>{children}</CartContext.Provider>\r\n  )\r\n}\r\n\r\nexport const useShoppingCart = () => {\r\n  const [cart, dispatch] = useContext(CartContext)\r\n\r\n  const {\r\n    lastClicked,\r\n    shouldDisplayCart,\r\n    cartCount,\r\n    cartDetails,\r\n    totalPrice,\r\n    currency,\r\n    language\r\n  } = cart\r\n\r\n  const addItem = (product, count = 1, price_metadata, product_metadata) => {\r\n    dispatch({\r\n      type: 'add-item-to-cart',\r\n      product,\r\n      count,\r\n      price_metadata,\r\n      product_metadata\r\n    })\r\n  }\r\n\r\n  const removeItem = (id) => dispatch({ type: 'remove-item-from-cart', id })\r\n  const setItemQuantity = (id, quantity) =>\r\n    dispatch({ type: 'set-item-quantity', id, quantity })\r\n  const incrementItem = (id, count = 1) =>\r\n    dispatch({ type: 'increment-item', id, count })\r\n  const decrementItem = (id, count = 1) =>\r\n    dispatch({ type: 'decrement-item', id, count })\r\n  const clearCart = () => dispatch({ type: 'clear-cart' })\r\n\r\n  const storeLastClicked = (id) => dispatch({ type: 'store-last-clicked', id })\r\n  const handleCartClick = () => dispatch({ type: 'cart-click' })\r\n  const handleCartHover = () => dispatch({ type: 'cart-hover' })\r\n  const handleCloseCart = () => dispatch({ type: 'close-cart' })\r\n\r\n  const loadCart = (cartDetails, shouldMerge = true) =>\r\n    dispatch({ type: 'load-cart', cartDetails, shouldMerge })\r\n\r\n  const redirectToCheckout = checkoutHandler(cart, {\r\n    modes: ['client-only', 'checkout-session'],\r\n    stripe(stripe, options) {\r\n      return stripe.redirectToCheckout(options)\r\n    }\r\n  })\r\n\r\n  const checkoutSingleItem = checkoutHandler(cart, {\r\n    modes: ['client-only'],\r\n    stripe(stripe, options, { sku, quantity = 1 }) {\r\n      options.lineItems = [{ price: sku, quantity }]\r\n      return stripe.redirectToCheckout(options)\r\n    }\r\n  })\r\n\r\n  const shoppingCart = {\r\n    cartDetails,\r\n    cartCount,\r\n    totalPrice,\r\n    get formattedTotalPrice() {\r\n      return formatCurrencyString({\r\n        value: totalPrice,\r\n        currency,\r\n        language\r\n      })\r\n    },\r\n\r\n    addItem,\r\n    removeItem,\r\n    setItemQuantity,\r\n    incrementItem,\r\n    decrementItem,\r\n    clearCart,\r\n    lastClicked,\r\n    storeLastClicked,\r\n    shouldDisplayCart,\r\n    handleCartClick,\r\n    handleCartHover,\r\n    handleCloseCart,\r\n    redirectToCheckout,\r\n    checkoutSingleItem,\r\n    loadCart\r\n  }\r\n  useDebugValue(shoppingCart)\r\n  return shoppingCart\r\n}\r\n\r\nexport function DebugCart(props) {\r\n  const cart = useShoppingCart()\r\n  const cartPropertyRows = Object.entries(cart)\r\n    .filter(([, value]) => typeof value !== 'function')\r\n    .map(([key, value]) => (\r\n      <tr key={key}>\r\n        <td>{key}</td>\r\n        <td>\r\n          {typeof value === 'object' ? (\r\n            <button onClick={() => console.log(value)}>Log value</button>\r\n          ) : (\r\n            JSON.stringify(value)\r\n          )}\r\n        </td>\r\n      </tr>\r\n    ))\r\n\r\n  return (\r\n    <table\r\n      style={{\r\n        position: 'fixed',\r\n        top: 50,\r\n        right: 50,\r\n        backgroundColor: '#eee',\r\n        textAlign: 'left',\r\n        maxWidth: 500,\r\n        padding: 20,\r\n        borderSpacing: '25px 5px'\r\n      }}\r\n      {...props}\r\n    >\r\n      <thead>\r\n        <tr>\r\n          <th>Key</th>\r\n          <th>Value</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>{cartPropertyRows}</tbody>\r\n    </table>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}