{"ast":null,"code":"var _jsxFileName = \"/home/nu11thr3ad/Desktop/Reservation Booking/src/context/auth/AuthState.js\",\n    _s = $RefreshSig$();\n\n//@ts-check\nimport React, { useReducer } from \"react\";\nimport AuthContext from \"./authContext\";\nimport authReducer from \"./authReducer\";\nimport axios from \"axios\";\nimport setAuthToken from \"../../utils/setAuthToken\";\nimport { REGISTER_SUCCESS, REGISTER_FAIL, CLEAR_ERRORS, LOGIN_FAIL, LOGIN_SUCCESS, LOGOUT, USER_LOADED, AUTH_ERROR } from \"../types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthState = props => {\n  _s();\n\n  const initialState = {\n    token: localStorage.getItem(\"token\"),\n    isAuthenticated: false,\n    loading: true,\n    user: null,\n    error: null\n  };\n  const [state, dispatch] = useReducer(authReducer, initialState); // Load user\n\n  const loadUser = async () => {\n    if (localStorage.token) {\n      setAuthToken(localStorage.token);\n    }\n\n    try {\n      const res = await axios.get(\"/users/me\"); // @ts-ignore\n\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data\n      });\n    } catch (error) {\n      // @ts-ignore\n      dispatch({\n        type: AUTH_ERROR\n      });\n    }\n  }; // register user\n\n\n  const register = async formData => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    try {\n      const res = await axios.post(\"/users\", formData, config); // @ts-ignore\n\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data\n      });\n      loadUser();\n    } catch (err) {\n      // @ts-ignore\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: err.response.data.msg\n      });\n    }\n  }; // login user\n\n\n  const login = async formData => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    try {\n      const res = await axios.post(\"/users/login\", formData, config); // @ts-ignore\n\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data\n      });\n      loadUser();\n    } catch (err) {\n      // @ts-ignore\n      dispatch({\n        type: LOGIN_FAIL,\n        payload: err.response.data.msg\n      });\n    }\n  }; // logout\n  // @ts-ignore\n\n\n  const logout = () => dispatch({\n    type: LOGOUT\n  }); // clear errors\n  // @ts-ignore\n\n\n  const clearErrors = () => dispatch({\n    type: CLEAR_ERRORS\n  });\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      token: state.token,\n      isAuthenticated: state.isAuthenticated,\n      loading: state.loading,\n      user: state.user,\n      error: state.error,\n      register,\n      loadUser,\n      login,\n      logout,\n      clearErrors\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = AuthState;\nexport default AuthState;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthState\");","map":{"version":3,"sources":["/home/nu11thr3ad/Desktop/Reservation Booking/src/context/auth/AuthState.js"],"names":["React","useReducer","AuthContext","authReducer","axios","setAuthToken","REGISTER_SUCCESS","REGISTER_FAIL","CLEAR_ERRORS","LOGIN_FAIL","LOGIN_SUCCESS","LOGOUT","USER_LOADED","AUTH_ERROR","AuthState","props","initialState","token","localStorage","getItem","isAuthenticated","loading","user","error","state","dispatch","loadUser","res","get","type","payload","data","register","formData","config","headers","post","err","response","msg","login","logout","clearErrors","children"],"mappings":"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","sourcesContent":["//@ts-check\nimport React, { useReducer } from \"react\";\nimport AuthContext from \"./authContext\";\nimport authReducer from \"./authReducer\";\nimport axios from \"axios\";\nimport setAuthToken from \"../../utils/setAuthToken\";\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  CLEAR_ERRORS,\n  LOGIN_FAIL,\n  LOGIN_SUCCESS,\n  LOGOUT,\n  USER_LOADED,\n  AUTH_ERROR,\n} from \"../types\";\n\nconst AuthState = (props) => {\n  const initialState = {\n    token: localStorage.getItem(\"token\"),\n    isAuthenticated: false,\n    loading: true,\n    user: null,\n    error: null,\n  };\n\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Load user\n  const loadUser = async () => {\n    if (localStorage.token) {\n      setAuthToken(localStorage.token);\n    }\n    try {\n      const res = await axios.get(\"/users/me\");\n      // @ts-ignore\n      dispatch({ type: USER_LOADED, payload: res.data });\n    } catch (error) {\n      // @ts-ignore\n      dispatch({ type: AUTH_ERROR });\n    }\n  };\n\n  // register user\n  const register = async (formData) => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    try {\n      const res = await axios.post(\"/users\", formData, config);\n      // @ts-ignore\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data,\n      });\n      loadUser();\n    } catch (err) {\n      // @ts-ignore\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: err.response.data.msg,\n      });\n    }\n  };\n  // login user\n  const login = async (formData) => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    try {\n      const res = await axios.post(\"/users/login\", formData, config);\n      // @ts-ignore\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data,\n      });\n      loadUser();\n    } catch (err) {\n      // @ts-ignore\n      dispatch({\n        type: LOGIN_FAIL,\n        payload: err.response.data.msg,\n      });\n    }\n  };\n  // logout\n  // @ts-ignore\n  const logout = () => dispatch({ type: LOGOUT });\n  // clear errors\n  // @ts-ignore\n  const clearErrors = () => dispatch({ type: CLEAR_ERRORS });\n\n  return (\n    <AuthContext.Provider\n      value={{\n        token: state.token,\n        isAuthenticated: state.isAuthenticated,\n        loading: state.loading,\n        user: state.user,\n        error: state.error,\n        register,\n        loadUser,\n        login,\n        logout,\n        clearErrors,\n      }}\n    >\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthState;\n"]},"metadata":{},"sourceType":"module"}